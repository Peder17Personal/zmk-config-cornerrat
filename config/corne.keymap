/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        home_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  Ã¦  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp D  &kp R      &kp W      &kp B    &kp J  &kp F          &kp U         &kp P    &kp P      &kp ENTER
&kp TAB    &kp A  &kp S  &kp H      &kp T      &kp G    &kp Y  &kp N          &kp E         &kp O    &kp I      &kp LCTRL
&kp LSHFT  &kp Z  &kp X  &kp M      &kp C      &kp V    &kp K  &kp L          &kp COMMA     &kp DOT  &kp MINUS  &bt BT_CLR
                         &kp LCTRL  &kp SPACE  &mo 1    &mo 4  &kp BACKSPACE  &kp LEFT_ALT
            >;
        };

        Char_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &to 2       &to 3           &to 4             &rgb_ug RGB_ON   &rgb_ug RGB_BRI    &kp SLASH     &kp N7         &kp N8        &kp N9        &kp EQUAL  &kp ENTER
&kp TAB    &bl BL_TOG  &kp LEFT_ARROW  &kp UP_ARROW      &kp RIGHT_ARROW  &bl BL_SET 100     &kp ASTERISK  &kp NUMBER_4   &kp N5        &kp NUMBER_6  &kt PLUS   &kp KP_ASTERISK
&kp LSHFT  &gresc      &bl BL_CYCLE    &kp DOWN_ARROW    &rgb_ug RGB_EFF  &gresc             &kp N0        &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &kp KP_DIVIDE
                                       &kp LEFT_CONTROL  &kp SPACE        &none              &kp LWIN      &kp BACKSPACE  &kp LEFT_ALT
            >;
        };

        special_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL    &kp AT        &kp HASH         &kp DLLR         &kp PRCNT         &kp CARET  &kp AMPS       &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &bl BL_TOG  &bl BL_CYCLE  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &trans            &kp MINUS  &kp EQUAL      &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &bt BT_NXT  &bt BT_PRV    &bt BT_SEL 0     &trans           &bt BT_CLR_ALL    &kp UNDER  &kp PLUS       &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                     &kp LGUI         &kp SPACE        &to 0             &kp RET    &kp BACKSPACE  &kp RALT
            >;
        };

        qwerty {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R      &kp T    &kp Y   &kp U  &kp I      &kp O       &kp P      &trans
&kp TAB    &kp A  &kp S  &kp D         &kp F      &kp G    &kp H   &kp J  &kp K      &kp L       &trans     &trans
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V      &kp B    &kp N   &kp M  &kp COMMA  &kp PERIOD  &kp MINUS  &trans
                         &kp LEFT_WIN  &kp SPACE  &to 0    &trans  &to 0  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans           &trans          &mkp LCLK       &mmv MOVE_UP  &mkp RCLK        &trans    &rgb_ug RGB_TOG   &rgb_ug RGB_HUI    &rgb_ug RGB_HUD  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF
&rgb_ug RGB_TOG  &rgb_ug RGB_ON  &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans    &ext_power EP_ON  &ext_power EP_TOG  &rgb_ug RGB_TOG  &mmv MOVE_LEFT   &studio_unlock   &bt BT_CLR
&sk B            &trans          &trans          &trans        &trans           &trans    &bl BL_ON         &bl BL_OFF         &bl BL_TOG       &bl BL_INC       &bl BL_DEC       &bl BL_SET 80
                                                 &trans        &trans           &to 0     &to 0             &to 0              &bl BL_TOG
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
